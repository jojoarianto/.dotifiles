"""""""""""""""""""""""""""""""""""""
" Mappings configurationn
" imap => insert mode 
" nmap => normal mode 
"""""""""""""""""""""""""""""""""""""

nnoremap <S-j> :m .+1<CR>==
nnoremap <S-k> :m .-2<CR>==
inoremap <A-S-j> <Esc>:m .+1<CR>==gi
inoremap <A-S-k> <Esc>:m .-2<CR>==gi
vnoremap <S-j> :m '>+1<CR>gv=gv
vnoremap <S-k> :m '<-2<CR>gv=gv

" get relative path and copy to clipboard
nnoremap <Leader>p :let @+ = expand("%")<CR>

"" CTRL + P 
map <C-p> :Files<CR>
"" CTRL + n 
map <C-n> :NERDTreeToggle<CR> 
"" CTRL + m 
map <C-m> :TagbarToggle<CR>

imap ;; <Esc>
imap ii <Esc>
nmap ;; :w<CR>
nmap ;: :wq<CR>
nmap :W :w<CR>
nmap :Q :q<CR>
nmap :Q! :q!<CR>
nmap :WQ :wq<CR>

"" Git file list
nmap gll :Glog<CR>
nmap gf :GFiles<CR> 
" Git Status
nmap gs :Gstatus<CR>
" Git Push 
nmap gps :Gpush<CR>
" Git Pull
nmap gpl :Gpull<CR>
" Git Add
nmap gw :Gwrite<CR> 
nmap gcm :Gcommit<CR>
nmap gmt :Git mergetool<CR>
" vim-conflicted
nmap gcm :GitNextConflict<CR>
" Use `gl` and `gu` rather than the default conflicted diffget mappings
let g:diffget_local_map = 'gl'
let g:diffget_upstream_map = 'gu'

"" Mac User Map HJKL
imap ˙ <Left>
imap ∆ <Down>
imap ˚ <Up>
imap ¬ <Right>

noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

"" Omnicomplete Better Nav
"inoremap <expr> <leader><c-j> ("\<C-n>")
"inoremap <expr> <leader><c-k> ("\<C-p>")
"
"" Neocomplete Plugin mappins
"inoremap <expr><C-g>     neocomplete#undo_completion()
"inoremap <expr><C-l>     neocomplete#complete_common_string()
"
"" Recommended key-mappings.
"" <CR>: close popup and save indent.
"inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
"
"" <C-h>, <BS>: close popup and delete backword char.
"inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
"inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"



" Shortcuts
nnoremap <Leader>b :Buffers<CR> 
nnoremap <Leader>o :Files<CR> 
nnoremap <Leader>O :CtrlP<CR>
nnoremap <Leader>w :w<CR>

" Shortcuts for git blame
nnoremap <Leader>s :<C-u>call gitblame#echo()<CR>
nnoremap <Leader>y :terminal<CR>

" Vim-Test Mappings
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" Disable arrow movement, resize splits instead.
if get(g:, 'elite_mode')
    nnoremap <Up>    :resize +2<CR>
    nnoremap <Down>  :resize -2<CR>
    nnoremap <Left>  :vertical resize +2<CR>
    nnoremap <Right> :vertical resize -2<CR>
endif

map <silent> <LocalLeader>ws :highlight clear ExtraWhitespace<CR>

"" Require Import-Cost
" Put this in your .vimrc
" augroup import_cost_auto_run
"    autocmd!
"    autocmd InsertLeave *.js,*.jsx,*.ts,*.tsx ImportCost
"    autocmd BufEnter *.js,*.jsx,*.ts,*.tsx ImportCost
"    autocmd CursorHold *.js,*.jsx,*.ts,*.tsx ImportCost
" augroup END

"" Requirement for https://github.com/arnaud-lb/vim-php-namespace
function! IPhpInsertUse()
    call PhpInsertUse()
    call feedkeys('a',  'n')
endfunction
autocmd FileType php inoremap <Leader>u <Esc>:call IPhpInsertUse()<CR>
autocmd FileType php noremap <Leader>u :call PhpInsertUse()<CR>
